---
title: "Sequential HCL Color Palettes"
---

### Description

See also: [qualitative_hcl](colorspace.palettes.qualitative_hcl.qmd), [diverging_hcl](colorspace.palettes.diverging_hcl.qmd),
[divergingx_hcl](colorspace.palettes.divergingx_hcl.qmd), [rainbow_hcl](colorspace.palettes.rainbow_hcl.qmd), [heat_hcl](colorspace.palettes.heat_hcl.qmd),
[terrain_hcl](colorspace.palettes.terrain_hcl.qmd), [diverging_hsv](colorspace.palettes.diverging_hsv.qmd), and
[rainbow](colorspace.palettes.rainbow.qmd).

### Usage

<pre><code class='language-python'>sequential_hcl(h=260, c=[80, 0], l=[30, 90],<br/>               power=1.5, fixup=True, palette=None,<br/>               rev=False, *args, **kwargs)</code></pre>

### Arguments

<dl class="pyp-list param-list">
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:h">h</code><code class="argument-class">numeric</code>
  </dt>
 <dd>escape(Hue values (color). If only one value is given the value
is recycled which yields a single-hue sequential color palette.  If
input `h` is a str this argument acts like the `palette` argument
(see `palette` input parameter).)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:c">c</code><code class="argument-class">numeric list</code>
  </dt>
 <dd>escape(Chroma values (colorfullness), numeric of length one
(constant chroma), two (linear), or three (advanced; [c1, c2, cmax]).)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:l">l</code><code class="argument-class">numeric list</code>
  </dt>
 <dd>escape(Luminance values (luminance), numeric of length two.
If multiple values are provided only the first one will be used.)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:power">power</code><code class="argument-class">numeric, numeric list</code>
  </dt>
 <dd>escape(Power parameter for non-linear behaviour
of the color palette. One or two values can be provided.)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:fixup">fixup</code><code class="argument-class">bool</code>
  </dt>
 <dd>escape(Only used when converting the HCL colors to hex.  Should
RGB values outside the defined RGB color space be corrected?)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:palette">palette</code><code class="argument-class">str</code>
  </dt>
 <dd>escape(Can be used to load a default diverging color palette
specification. If the palette does not exist an exception will be
raised.  Else the settings of the palette as defined will be used to
create the color palette.)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:rev">rev</code><code class="argument-class">bool</code>
  </dt>
 <dd>escape(Should the color map be reversed.)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:*args">*args</code>
  </dt>
 <dd>escape(Currently unused.)</dd>
  <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
   <code id="colorspace.palettes.sequential_hcl:**kwargs">**kwargs</code>
  </dt>
 <dd>escape(Additional arguments to overwrite the h/c/l settings.)</dd>
</dl>

### Return

Initialize new object, no return. Raises a set of errors if the parameters
are misspecified. Note that the object is callable, the default object call
can be used to return hex colors (identical to the `.colors()` method),
see examples.

### Methods

<dl class="pyp-list method-list">
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.cmap(n=101, name=&#x27;custom_hcl_cmap&#x27;)](colorspace.palettes.sequential_hcl.cmap.qmd)</code>
    </dt>
    <dd>Get matplotlib Compatible Color Map</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.colors(n=11, fixup=True, **kwargs)](colorspace.palettes.sequential_hcl.colors.qmd)</code>
    </dt>
    <dd>Get Colors</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.get(key)](colorspace.palettes.sequential_hcl.get.qmd)</code>
    </dt>
    <dd>Get Specific Palette Setting</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.name()](colorspace.palettes.sequential_hcl.name.qmd)</code>
    </dt>
    <dd>Get Palette Name</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.show_settings()](colorspace.palettes.sequential_hcl.show_settings.qmd)</code>
    </dt>
    <dd>Show Palette Settings</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.specplot(n=180, *args, **kwargs)](colorspace.palettes.sequential_hcl.specplot.qmd)</code>
    </dt>
    <dd>Color Spectrum Plot</dd>
    <dt style = "white-space: nowrap; font-family: monospace; vertical-align: top">
       <code>[sequential_hcl.swatchplot(n=7, **kwargs)](colorspace.palettes.sequential_hcl.swatchplot.qmd)</code>
    </dt>
    <dd>Palette Swatch Plot</dd>
</dl>


### Examples

```{python}
#| echo: true
#| error: true
#| warning: true
from colorspace import sequential_hcl
a = sequential_hcl()
a.colors(10)
```

```{python}
#| echo: true
#| error: true
#| warning: true
# Different color palette by name
b = sequential_hcl("Peach")
b.colors(10)
```

```{python}
#| echo: true
#| error: true
#| warning: true
b.swatchplot(show_names = False, figsize = (5.5, 0.5));
```

```{python}
#| echo: true
#| error: true
#| warning: true
# The standard call of the object also returns hex colors
sequential_hcl("Peach")(10)
```



