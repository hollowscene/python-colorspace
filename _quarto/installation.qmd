---
title: Package Installation
---


This package is available via the
[Python Package index (PyPI)](https://pypi.org/project/colorspace/) or via 
[GitHub](https://github.com/retostauffer/python-colorspace).
A few requirements are needed to be able to use the package and all its features.

* Python, tested for versions {{PYTEST_VERSIONS}})
* [`numpy`](https://pypi.org/project/numpy/>)
* [`matplotlib`](https://pypi.org/project/matplotlib/>) (optional; used for visualization)
* [`imageio`](https://pypi.org/project/imageio/>) (optional; only used by
    [`cvd_image()`](/man/colorspace.cvd_image.cvd_image.qmd))
* [`pandas`](https://pandas.pydata.org/) (optional; used by [`dataset()`](/man/colorspace.datasets.dataset.qmd))

Please use the [GitHub issues](https://github.com/retostauffer/python-colorspace/issues>)
to report bugs and issues as well as feature requests. There is no
guarantee that feature requests can be accommodated, especially as we try to
keep both, the R and Python version of the package, around the same level.

## Installation

The latest release can be directly installed from [PyPI](https://pypi.org/project/colorspace/)
using:

```
pip install colorspace
```

... or installing the last version (GitHub head branch) using:

```
pip install git+https://github.com/retostauffer/python-colorspace
```

Alternatively, clone the git repository and install the package from there:

```
git clone https://github.com/retostauffer/python-colorspace.git
cd python-colorspace && pip install .
```

**Using a virtual environment**

Alternatively, a Python virtual environment can be used.
The additional (optional) packages allow to use full _colorspace_
functionality, but are optional and not required by most core features.

```
# Initialize and activate new virtual env
virtualenv my_venv && source my_venv/bin/activate

# Installing colorspace
pip install colorspace

# Installing additional (optional) packages
pip install imageio matplotlib pandas
```

[**Tcl/Tk support**]{#tkinter-support}

_colorspace_ provides an [App for Choosing Colors and Palettes Interactively](articles/choose_palette.qmd) leveraging the [`tkinter`](https://docs.python.org/3/library/tkinter.html)
interface to the Tcl/Tk GUI toolkit. Although part of the standard library, it is
not installed by default on all systems, particularely in certain Linux distributions.

If `tkinter` is missing, _colorspace_ will throw a `RuntimeError` where the
package is required (when calling
[`choose_palette`](man/colorspace.choose_palette.choose_palette.qmd)). Please
read [Installing Tk](https://tkdocs.com/tutorial/install.html) on how to
install `tkinter` on your system. Note that virtual environments may need to be
re-created after installing `tkinter`.


## Test and development

The following sections are intended for developers, not for users,
and gives some insights on how to run automated tests, create
coverage reports, test examples, and render the documentation.

If you encounter issues and bugs, or are interested to contribute
to the Python _colorspace_ package, please read
our [Community guidelines](community.qmd).


### Testing

To run the automated tests with minimal requirements, we suggest
to clone the repository, set up a virtual environment with the
required packages, and then run the test using `pytest`.

```
# Cloning current main branch
git clone https://github.com/retostauffer/python-colorspace.git

# Setting up and activating virtual environment
virtualenv my_venv
source my_venv/bin/activate

# Installing pytest and additional packages as well
# as pytest and setuptools (to ensure it is installed)
pip install -r requirements.txt pytest setuptools

# Installing Python colorspace (from current main branch)
pip install -e .

# Run tests
pytest
```

For those using the GNU make utility, the package comes with
a `Makefile` which includes rules for running hard (minimal dependencies)
and extended (additional dependencies) tests. 

```
# Cloning current main branch
git clone https://github.com/retostauffer/python-colorspace.git

# Changing directory
cd python-colorspace

# Creating a fresh `hardvenv` virtual environment and running hard tests only
make hardtest

# Setting up virtual environment with all dependencies for full
# tests as well as for creating the documentation, calculating
# coverage etc., activating venv, installing Python colorspace, and
# running full tests (hard and extended tests)
make venv && source venv/bin/activate && make install && make test
```

### Development

For the developers out there, the `Makefile` provides additional
rules for creating/updating the man pages, creating the coverage report,
testing the docstring examples, and rendering the documentation. Note
that the latter two require [`quarto`](https://quarto.org) to be installed.

```
# Cloning current main branch
git clone https://github.com/retostauffer/python-colorspace.git

# Setting up virtualenv, installing colorspace (main)
make venv && make install

# Activate venv
source venv/bin/activate

# Running tests: Runs 'hard tests' (minimal requirements) first followed
# by extended tests (with additional requirements)
make test

# Create coverage report; tries to open report in firefox
make cov

# Testing docstring examples; requires pyp2qmd and quarto
make examples

# Building documentation; requires pyp2qmd and quarto
make render
```











